# Generated by Django 5.2.7 on 2025-10-05 05:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TokenTemporal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('codigo_udg', models.CharField(max_length=50)),
                ('nombre_completo', models.CharField(max_length=200)),
                ('vigencia', models.CharField(max_length=50)),
                ('url_credencial', models.URLField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usado', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Token Temporal',
                'verbose_name_plural': 'Tokens Temporales',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre_completo', models.CharField(max_length=200)),
                ('codigo_udg', models.CharField(help_text='Código extraído del token del QR', max_length=50, unique=True)),
                ('url_credencial', models.URLField(help_text='URL completa del QR de la credencial')),
                ('vigencia', models.CharField(help_text='Ej: ENE-2026', max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(choices=[('hombre', 'Hombre'), ('mujer', 'Mujer'), ('otro', 'Otro')], max_length=10)),
                ('buscando', models.CharField(choices=[('hombres', 'Hombres'), ('mujeres', 'Mujeres'), ('ambos', 'Ambos')], default='ambos', max_length=10)),
                ('carrera', models.CharField(blank=True, max_length=200)),
                ('semestre', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('verificado', models.BooleanField(default=False)),
                ('activo', models.BooleanField(default=True)),
                ('perfil_completo', models.BooleanField(default=False)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('ultima_actividad', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-fecha_registro'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
